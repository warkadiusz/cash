$print(20 * 4 + 5 / 5)
/$let a = 5
let b = 12
let c = a + b

func test(x) {
    let a = 16
    print(x)
}

test(a)

const PI = 3.14159
const NEG_PI = -3.1415

$PI = "try to overwrite"

$ some comment here
$ some more comments

func a() {
    let u = 12
    const bc = -35.7
}
a = "trochę zmiana planów"
let asd = 3 + 0.14 - a() * 5 * 45 $comment that out
let uszy = a() * -3.14

print("some debug")
print(a);
print(PI)

if (a >= b)
    const test3 = "b"
else if a > b
    let u = 3434
else {
    let ydw = 3.14
    blabla = 66
    oooo = "bfbfb"
}

$/


/$
$ Events-based execution framework in user-space
let eventsHandlers = array()

func createEvent(eventName) {
    let eventsHandlers = getGlobalVar("eventsHandlers");
    eventsHandlers = arraySet(eventsHandlers, eventName, array());
    setGlobalVar("eventsHandlers", eventsHandlers);
}

func onEvent(eventName, funcName) {
    let eventsHandlers = getGlobalVar("eventsHandlers")
    let handlers = arrayGet(eventsHandlers, eventName)
    handlers = arrayPush(handlers, funcName)
    eventsHandlers = arraySet(eventsHandlers, eventName, handlers)
    setGlobalVar("eventsHandlers", eventsHandlers)
}

func triggerEvent(eventName, data) {
    let eventsHandlers = getGlobalVar("eventsHandlers")
    let handlers = arrayGet(eventsHandlers, eventName)

    let i = 0
    let handlersCount = arraySize(handlers)
    while i < handlersCount {
        call(arrayGet(handlers, i), data)
        i = i + 1;
    }
}

func printMy(msg) {
    print("ooh I was called")
}

createEvent("aaa")
onEvent("aaa", "printMy")
triggerEvent("aaa", "");
$/
